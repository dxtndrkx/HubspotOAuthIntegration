{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Developer/integrationAssesment/frontend/src/integrations/hubspot.js\",\n  _s = $RefreshSig$();\n// hubspot.js\n\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, TextField } from \"@mui/material\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams\n}) => {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [loadedData, setLoadedData] = useState(null);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/authorize`, formData);\n      const authURL = response === null || response === void 0 ? void 0 : response.data;\n      const newWindow = window.open(authURL, \"HubSpot Authorization\", \"width=600, height=600\");\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if ((newWindow === null || newWindow === void 0 ? void 0 : newWindow.closed) !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      var _e$response, _e$response$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response = e.response) === null || _e$response === void 0 ? void 0 : (_e$response$data = _e$response.data) === null || _e$response$data === void 0 ? void 0 : _e$response$data.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(`http://localhost:8000/integrations/hubspot/credentials`, formData);\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams(prev => ({\n          ...prev,\n          credentials: credentials,\n          type: \"HubSpot\"\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      var _e$response2, _e$response2$data;\n      setIsConnecting(false);\n      alert(e === null || e === void 0 ? void 0 : (_e$response2 = e.response) === null || _e$response2 === void 0 ? void 0 : (_e$response2$data = _e$response2.data) === null || _e$response2$data === void 0 ? void 0 : _e$response2$data.detail);\n    }\n  };\n  const handleLoad = async () => {\n    try {\n      var _integrationParams$cr;\n      const response = await axios.get(`http://localhost:8000/integrations/hubspot/load`, {\n        headers: {\n          Authorization: `Bearer ${integrationParams === null || integrationParams === void 0 ? void 0 : (_integrationParams$cr = integrationParams.credentials) === null || _integrationParams$cr === void 0 ? void 0 : _integrationParams$cr.access_token}`\n        }\n      });\n      const data = response.data;\n      setLoadedData(JSON.stringify(data, null, 2));\n    } catch (e) {\n      var _e$response3, _e$response3$data;\n      alert(e === null || e === void 0 ? void 0 : (_e$response3 = e.response) === null || _e$response3 === void 0 ? void 0 : (_e$response3$data = _e$response3.data) === null || _e$response3$data === void 0 ? void 0 : _e$response3$data.detail);\n    }\n  };\n  useEffect(() => {\n    setIsConnected(integrationParams !== null && integrationParams !== void 0 && integrationParams.credentials ? true : false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [\"Parameters\", /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        sx: {\n          mt: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: isConnected ? () => {} : handleConnectClick,\n          color: isConnected ? \"success\" : \"primary\",\n          disabled: isConnecting,\n          style: {\n            pointerEvents: isConnected ? \"none\" : \"auto\",\n            cursor: isConnected ? \"default\" : \"pointer\",\n            opacity: isConnected ? 1 : undefined\n          },\n          children: isConnected ? \"HubSpot Connected\" : isConnecting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this) : \"Connect to HubSpot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Loaded Data\",\n      value: loadedData || \"\",\n      sx: {\n        mt: 2\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      disabled: true,\n      multiline: true,\n      minRows: 6\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLoad,\n      sx: {\n        mt: 2\n      },\n      variant: \"contained\",\n      children: \"Load Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: () => setLoadedData(null),\n      sx: {\n        mt: 1\n      },\n      variant: \"contained\",\n      children: \"Clear Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HubSpotIntegration, \"/tWI+vQa5QDB4pYqnVPp0JgjE7E=\");\n_c = HubSpotIntegration;\nvar _c;\n$RefreshReg$(_c, \"HubSpotIntegration\");","map":{"version":3,"names":["useState","useEffect","Box","Button","CircularProgress","TextField","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","HubSpotIntegration","user","org","integrationParams","setIntegrationParams","_s","isConnected","setIsConnected","isConnecting","setIsConnecting","loadedData","setLoadedData","handleConnectClick","formData","FormData","append","response","post","authURL","data","newWindow","window","open","pollTimer","setInterval","closed","clearInterval","handleWindowClosed","e","_e$response","_e$response$data","alert","detail","credentials","prev","type","_e$response2","_e$response2$data","handleLoad","_integrationParams$cr","get","headers","Authorization","access_token","JSON","stringify","_e$response3","_e$response3$data","children","sx","mt","display","alignItems","justifyContent","variant","onClick","color","disabled","style","pointerEvents","cursor","opacity","undefined","size","fileName","_jsxFileName","lineNumber","columnNumber","label","value","InputLabelProps","shrink","multiline","minRows","_c","$RefreshReg$"],"sources":["/Users/dev/Developer/integrationAssesment/frontend/src/integrations/hubspot.js"],"sourcesContent":["// hubspot.js\n\nimport { useState, useEffect } from \"react\";\nimport { Box, Button, CircularProgress, TextField } from \"@mui/material\";\nimport axios from \"axios\";\n\nexport const HubSpotIntegration = ({\n  user,\n  org,\n  integrationParams,\n  setIntegrationParams,\n}) => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [loadedData, setLoadedData] = useState(null);\n\n  // Function to open OAuth in a new window\n  const handleConnectClick = async () => {\n    try {\n      setIsConnecting(true);\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(\n        `http://localhost:8000/integrations/hubspot/authorize`,\n        formData\n      );\n      const authURL = response?.data;\n\n      const newWindow = window.open(\n        authURL,\n        \"HubSpot Authorization\",\n        \"width=600, height=600\"\n      );\n\n      // Polling for the window to close\n      const pollTimer = window.setInterval(() => {\n        if (newWindow?.closed !== false) {\n          window.clearInterval(pollTimer);\n          handleWindowClosed();\n        }\n      }, 200);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  // Function to handle logic when the OAuth window closes\n  const handleWindowClosed = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"user_id\", user);\n      formData.append(\"org_id\", org);\n      const response = await axios.post(\n        `http://localhost:8000/integrations/hubspot/credentials`,\n        formData\n      );\n      const credentials = response.data;\n      if (credentials) {\n        setIsConnecting(false);\n        setIsConnected(true);\n        setIntegrationParams((prev) => ({\n          ...prev,\n          credentials: credentials,\n          type: \"HubSpot\",\n        }));\n      }\n      setIsConnecting(false);\n    } catch (e) {\n      setIsConnecting(false);\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  const handleLoad = async () => {\n    try {\n      const response = await axios.get(\n        `http://localhost:8000/integrations/hubspot/load`,\n        {\n          headers: {\n            Authorization: `Bearer ${integrationParams?.credentials?.access_token}`,\n          },\n        }\n      );\n      const data = response.data;\n      setLoadedData(JSON.stringify(data, null, 2));\n    } catch (e) {\n      alert(e?.response?.data?.detail);\n    }\n  };\n\n  useEffect(() => {\n    setIsConnected(integrationParams?.credentials ? true : false);\n  }, []);\n\n  return (\n    <>\n      <Box sx={{ mt: 2 }}>\n        Parameters\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          sx={{ mt: 2 }}\n        >\n          <Button\n            variant=\"contained\"\n            onClick={isConnected ? () => {} : handleConnectClick}\n            color={isConnected ? \"success\" : \"primary\"}\n            disabled={isConnecting}\n            style={{\n              pointerEvents: isConnected ? \"none\" : \"auto\",\n              cursor: isConnected ? \"default\" : \"pointer\",\n              opacity: isConnected ? 1 : undefined,\n            }}\n          >\n            {isConnected ? (\n              \"HubSpot Connected\"\n            ) : isConnecting ? (\n              <CircularProgress size={20} />\n            ) : (\n              \"Connect to HubSpot\"\n            )}\n          </Button>\n        </Box>\n      </Box>\n      <TextField\n        label=\"Loaded Data\"\n        value={loadedData || \"\"}\n        sx={{ mt: 2 }}\n        InputLabelProps={{ shrink: true }}\n        disabled\n        multiline\n        minRows={6}\n      />\n      <Button onClick={handleLoad} sx={{ mt: 2 }} variant=\"contained\">\n        Load Data\n      </Button>\n      <Button\n        onClick={() => setLoadedData(null)}\n        sx={{ mt: 1 }}\n        variant=\"contained\"\n      >\n        Clear Data\n      </Button>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}